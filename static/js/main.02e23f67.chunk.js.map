{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","url","comments","writter","year","month","day","hour","min","choice","_handleOnClickAddItem","bind","_handleOnChangeUrlInput","_handleOnClickCancel","_handleOnClickRemove","_handleOnChangeDate","_handleOnChangeTime","_handleOnClickRandom","this","length","alert","axios","get","params","result","data","status","setState","size","choiced","Math","floor","random","newComments","filter","item","push","e","Time","target","value","split","date","id","window","confirm","newChoice","renderCancelButton","className","style","marginLeft","onClick","maxWidth","padding","width","type","placeholder","height","onChange","marginTop","map","margin","marginRight","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02e23f67.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      url: '',\n      comments:[],\n      writter: '',\n      year:'',\n      month:'',\n      day:'',\n      hour:'',\n      min:'',\n      choice:[],\n    }\n    this._handleOnClickAddItem = this._handleOnClickAddItem.bind(this)\n    this._handleOnChangeUrlInput = this._handleOnChangeUrlInput.bind(this)\n    this._handleOnClickCancel = this._handleOnClickCancel.bind(this)\n    this._handleOnClickRemove = this._handleOnClickRemove.bind(this)\n    this._handleOnChangeDate = this._handleOnChangeDate.bind(this)\n    this._handleOnChangeTime = this._handleOnChangeTime.bind(this)\n    this._handleOnClickRandom = this._handleOnClickRandom.bind(this)\n  }\n\n  async _handleOnClickAddItem () {\n    const { url,year,month,day,hour,min } = this.state\n    if (url.length === 0 || year.length ===0 || hour.length === 0) return alert('입력을 입력해주세요.')\n    //console.log(\"어싱크\");\n    const result = await axios.get(\"http://172.30.1.31:2000\",{params:{\n      url :url,\n      year:year,\n      month:month,\n      day:day,\n      hour:hour,\n      min:min,\n      \n}\n  });\n  let response = result.data.status;\n  if(response === \"ok\"){\n    let writter = result.data.writter;\n    let comments = result.data.comments;\n    this.setState({ writter: writter, comments: comments,choice:[] })\n    alert(\"명단을 가져왔습니다!\");\n  }else{\n    this.setState ({\n      url: '',\n      comments:[],\n      writter: '',\n      year:'',\n      month:'',\n      day:'',\n      hour:'',\n      min:'',\n      choice:[],\n    });\n    return alert(\"입력을 확인해주세요 !\");\n  }\n\n\n  }\n  _handleOnClickRandom(){\n    const {choice,comments} = this.state;\n    let size = comments.length;\n    if(size === 0){\n      return alert(\"뽑을 사람이 없습니다 !\");\n    }\n    let index = Math.floor(Math.random()*size);\n    let choiced = comments[index];\n\n    const newComments = comments.filter(item=> item !== choiced);\n    choice.push(choiced);\n    alert(choiced + ` 님이 뽑혔습니다 !`);\n    this.setState({ comments: newComments })\n\n  }\n  _handleOnChangeTime (e) {\n    let Time = e.target.value;\n    Time = Time.split(\":\");\n    this.setState({hour:Time[0], min :Time[1]});\n\n  }\n\n\n  _handleOnChangeUrlInput (e) {\n    this.setState({ url: e.target.value })\n\n  }\n\n  _handleOnChangeDate (e) {\n    //this.setState({ url: e.target.value })\n    let date = e.target.value;\n    date = date.split('-');\n\n    this.setState({year: date[0],month:date[1],day:date[2]});\n\n    //스플릿해서 설정\n  }\n\n  _handleOnClickCancel (id) { // index에 해당하는 아이템의 isCompleted 를 토글한다.\n    const choice = window.confirm(id + `님을  당첨자 목록에서 삭제 할까요?`);\n    if (choice){\n      const { choice,comments } = this.state\n      const newChoice = choice.filter(item=> item !== id);\n      comments.push(id)\n      this.setState({ choice: newChoice })\n  \n    }\n  \n\n  }\n\n  _handleOnClickRemove (id) {\n    const choice = window.confirm(id + `님을 뽑기 목록에서 삭제 할까요?`);\n    if (choice){\n      const { comments } = this.state\n      const newComments = comments.filter(item=> item !== id);\n      this.setState({ comments: newComments })\n    }\n    \n    \n  }\n\n  render () {\n    const renderCancelButton = item => (\n      <button\n        className='btn btn-danger btn-sm'\n        style={{ marginLeft: 5 }}\n        onClick={() => this._handleOnClickRemove(item)}\n      >\n        삭제\n      </button>\n    )\n    return (\n      <div className='container' style={{ maxWidth: 600, padding: '20px'}}>\n        <div className='row'>\n          <div className='col text-center'>\n            \n            <div className='input-group'>\n              <span style={{width:100}}>\n              URL\n              </span>\n              <input\n                type='text'\n                className='form-control'\n                placeholder='웃대에서 복사한 단축 URL '\n                style={{height:30}}\n                onChange={this._handleOnChangeUrlInput}\n          \n              />\n            </div>\n            <div className='input-group'>\n            <span style={{width:100}}>\n              마감일\n              </span>\n              <input\n                type='date'\n                className='form-control'\n\n                style={{height:30}}\n                onChange={this._handleOnChangeDate}\n          \n              />\n              <div className='input-group'>\n              <span style={{width:100}}>\n              마감시간\n              </span>\n              <input\n                type='time'\n                className='form-control'\n                style={{height:30}}\n\n                onChange={this._handleOnChangeTime}\n\n        \n              />\n              </div>\n              \n              <div className='input-group' >\n                <button\n                  className='btn btn-outline-secondary'\n                  onClick={this._handleOnClickAddItem}\n                  style={{ width: '100%'}}\n                >\n                  명단 가져오기\n                </button>\n              </div>\n              \n            </div>\n            <div className='input-group' > \n              <button\n                  className='btn btn-outline-secondary'\n                  style={{ width: '100%'}}\n                  onClick={this._handleOnClickRandom}\n                >\n                  랜덤뽑기\n                </button>\n            </div>\n           \n        \n          </div>\n        </div>\n        <div className='row' style={{ marginTop: 20 }}>\n          <div className='col-6'>\n            <h3>뽑힐사람</h3>\n            {\n              this.state.comments.map(item =>\n                <div style={{ margin: 10 }}>\n                  <span style={{ marginRight: 5 }}> {item}</span>\n                \n                  {renderCancelButton(item)}\n                </div>\n              )\n            }\n          </div>\n          <div className='col-6'>\n            <h3>뽑은사람</h3>\n            {\n              this.state.choice.map(item =>\n                <div key={item.id} style={{ margin: 10 }}>\n                  <span style={{ marginRight: 5 }}>{item}</span>\n                  <button\n                    className='btn btn-warning btn-sm'\n                    onClick={() => this._handleOnClickCancel(item)}\n                  >\n                    취소\n                  </button>\n      \n                </div>\n              )\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}